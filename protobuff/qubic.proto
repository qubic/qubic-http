syntax = "proto3";

package qubic.http.qubic.pb;

option go_package = "github.com/qubic/qubic-http/protobuff/";
import "google/api/annotations.proto";
import "google/protobuf/empty.proto";

message Balance {
  string id = 1;
  int64 balance = 2;
  uint32 valid_for_tick = 3;
  uint32 latest_incoming_transfer_tick = 4;
  uint32 latest_outgoing_transfer_tick = 5;
  int64 incoming_amount = 6;
  int64 outgoing_amount = 7;
  uint32 number_of_incoming_transfers = 8;
  uint32 number_of_outgoing_transfers = 9;
}

message GetBalanceRequest {
  string id = 1;
}

message GetBalanceResponse {
  Balance balance = 1;
}

message BroadcastTransactionRequest {
  string encoded_transaction = 1;
}

message BroadcastTransactionResponse {
  int32 peers_broadcasted = 1;
  string encoded_transaction = 2;
  string transaction_id = 3;
}

message TickInfo {
  uint32 tick = 1;
  uint32 duration = 2;
  uint32 epoch = 3;
  uint32 initial_tick = 4;
}

message GetTickInfoResponse {
  TickInfo tick_info = 1;
}

message GetBlockHeightResponse {
  TickInfo block_height = 1;
}

// Assets

message AssetInfo {
  uint32 tick = 1;
  uint32 universe_index = 2;
}

//Issued
message IssuedAssetData {
  string issuer_identity = 1;
  uint32 type = 2;
  string name = 3;
  int32 number_of_decimal_places = 4;
  repeated int32 unit_of_measurement = 5;
}

message IssuedAsset {
  IssuedAssetData data = 1;
  AssetInfo info = 2;
}

message IssuedAssetsRequest {
  string identity = 1;
}

message IssuedAssetsResponse {
  repeated IssuedAsset issued_assets = 1;
}

//Owned
message OwnedAssetData {
  string owner_identity = 1;
  uint32 type = 2;
  int32 padding = 3;
  uint32 managing_contract_index = 4;
  uint32 issuance_index = 5;
  int64 number_of_units = 6;
  IssuedAssetData issued_asset = 7;
}

message OwnedAsset {
  OwnedAssetData data = 1;
  AssetInfo info = 2;
}

message OwnedAssetsRequest {
  string identity = 1;
}

message OwnedAssetsResponse {
  repeated OwnedAsset owned_assets = 1;
}

//Possessed
message PossessedAssetData {
  string possessor_identity = 1;
  uint32 type = 2;
  int32 padding = 3;
  uint32 managing_contract_index = 4;
  uint32 issuance_index = 5;
  int64 number_of_units = 6;
  OwnedAssetData owned_asset = 7;
}

message PossessedAsset {
  PossessedAssetData data = 1;
  AssetInfo info = 2;
}

message PossessedAssetsRequest {
  string identity = 1;
}

message PossessedAssetsResponse {
  repeated PossessedAsset possessed_assets = 1;
}

message QuerySmartContractRequest {
  uint32 contract_index = 1;
  uint32 input_type = 2;
  uint32 input_size = 3;
  string request_data = 4;
}

message QuerySmartContractResponse {
  string response_data = 5;
}

message AssetIssuanceData {
  string issuer_identity = 1;
  uint32 type = 2;
  string name = 3;
  int32 number_of_decimal_places = 4;
  repeated int32 unit_of_measurement = 5;
}

message AssetIssuance {
  AssetIssuanceData data = 1;
  uint32 tick = 2;
  uint32 universe_index = 3;
}

message AssetIssuances {
  repeated AssetIssuance assets = 1;
}

message AssetOwnershipData {
  string owner_identity = 1;
  uint32 type = 2;
  uint32 managing_contract_index = 3;
  uint32 issuance_index = 4;
  int64 number_of_units = 5;
}

message AssetOwnership {
  AssetOwnershipData data = 1;
  uint32 tick = 2;
  uint32 universe_index = 3;
}

message AssetOwnerships {
  repeated AssetOwnership assets = 1;
}

message AssetPossessionData {
  string possessor_identity = 1;
  uint32 type = 2;
  uint32 managing_contract_index = 3;
  uint32 ownership_index = 4;
  int64 number_of_units = 5;
}

message AssetPossession {
  AssetPossessionData data = 1;
  uint32 tick = 2;
  uint32 universe_index = 3;
}

message AssetPossessions {
  repeated AssetPossession assets = 1;
}

message GetByUniverseIndexRequest {
  uint32 index = 1;
}

message GetIssuedAssetsByFilterRequest {
  string issuer_identity = 1;
  string asset_name = 2;
}

message GetOwnedAssetsByFilterRequest {
  string issuer_identity = 1;
  string asset_name = 2;
  string owner_identity = 3;
  uint32 ownership_managing_contract = 4;
}

message GetPossessedAssetsByFilterRequest {
  string issuer_identity = 1;
  string asset_name = 2;
  string owner_identity = 3;
  string possessor_identity = 4;
  uint32 ownership_managing_contract = 5;
  uint32 possession_managing_contract = 6;
}

service QubicLiveService {
  rpc GetBalance(GetBalanceRequest) returns (GetBalanceResponse) {
    option (google.api.http) = {
      get: "/balances/{id}"
    };
  };

  rpc QuerySmartContract(QuerySmartContractRequest) returns (QuerySmartContractResponse) {
    option (google.api.http) = {
      post: "/querySmartContract"
      body: "*"
    };
  };

  rpc BroadcastTransaction(BroadcastTransactionRequest) returns (BroadcastTransactionResponse) {
    option (google.api.http) = {
      post: "/broadcast-transaction"
      body: "*"
    };
  };

  rpc GetTickInfo(google.protobuf.Empty) returns (GetTickInfoResponse) {
    option (google.api.http) = {
      get: "/tick-info"
    };
  };

  rpc GetBlockHeight(google.protobuf.Empty) returns (GetBlockHeightResponse) {
    option (google.api.http) = {
      get: "/block-height"
    };
  };

  rpc GetIssuedAssets(IssuedAssetsRequest) returns (IssuedAssetsResponse) {
    option (google.api.http) = {
      get: "/assets/{identity}/issued"
    };
  };

  rpc GetOwnedAssets(OwnedAssetsRequest) returns (OwnedAssetsResponse) {
    option (google.api.http) = {
      get: "/assets/{identity}/owned"
    };
  };

  rpc GetPossessedAssets(PossessedAssetsRequest) returns (PossessedAssetsResponse) {
    option (google.api.http) = {
      get: "/assets/{identity}/possessed"
    };
  };


  // Returns a list of issued assets.
  rpc GetIssuedAssetsByFilter(GetIssuedAssetsByFilterRequest) returns (AssetIssuances) {
    option (google.api.http) = {
      get: "/assets/issuances"
    };
  }

  // Returns an asset issuance by universe index.
  rpc GetIssuedAssetByUniverseIndex(GetByUniverseIndexRequest) returns (AssetIssuance) {
    option (google.api.http) = {
      get: "/assets/issuances/{index}"
    };
  }

  // Returns a list of asset owners. Asset name and issuer are required. Issuer defaults to zero address.
  rpc GetOwnedAssetsByFilter(GetOwnedAssetsByFilterRequest) returns (AssetOwnerships) {
    option (google.api.http) = {
      get: "/assets/ownerships"
    };
  }

  // Returns an asset ownership by universe index.
  rpc GetOwnedAssetByUniverseIndex(GetByUniverseIndexRequest) returns (AssetOwnership) {
    option (google.api.http) = {
      get: "/assets/ownerships/{index}"
    };
  }

  // Returns a list of asset possessors. Asset name and issuer are required. Issuer defaults to zero address.
  rpc GetPossessedAssetsByFilter(GetPossessedAssetsByFilterRequest) returns (AssetPossessions) {
    option (google.api.http) = {
      get: "/assets/possessions"
    };
  }

  // Returns an asset possession by universe index.
  rpc GetPossessedAssetByUniverseIndex(GetByUniverseIndexRequest) returns (AssetPossession) {
    option (google.api.http) = {
      get: "/assets/possessions/{index}"
    };
  }

}