// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.21.12
// source: qubic.proto

package protobuff

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Balance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                         string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Balance                    int64  `protobuf:"varint,2,opt,name=balance,proto3" json:"balance,omitempty"`
	ValidForTick               uint32 `protobuf:"varint,3,opt,name=valid_for_tick,json=validForTick,proto3" json:"valid_for_tick,omitempty"`
	LatestIncomingTransferTick uint32 `protobuf:"varint,4,opt,name=latest_incoming_transfer_tick,json=latestIncomingTransferTick,proto3" json:"latest_incoming_transfer_tick,omitempty"`
	LatestOutgoingTransferTick uint32 `protobuf:"varint,5,opt,name=latest_outgoing_transfer_tick,json=latestOutgoingTransferTick,proto3" json:"latest_outgoing_transfer_tick,omitempty"`
	IncomingAmount             int64  `protobuf:"varint,6,opt,name=incoming_amount,json=incomingAmount,proto3" json:"incoming_amount,omitempty"`
	OutgoingAmount             int64  `protobuf:"varint,7,opt,name=outgoing_amount,json=outgoingAmount,proto3" json:"outgoing_amount,omitempty"`
	NumberOfIncomingTransfers  uint32 `protobuf:"varint,8,opt,name=number_of_incoming_transfers,json=numberOfIncomingTransfers,proto3" json:"number_of_incoming_transfers,omitempty"`
	NumberOfOutgoingTransfers  uint32 `protobuf:"varint,9,opt,name=number_of_outgoing_transfers,json=numberOfOutgoingTransfers,proto3" json:"number_of_outgoing_transfers,omitempty"`
}

func (x *Balance) Reset() {
	*x = Balance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qubic_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Balance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Balance) ProtoMessage() {}

func (x *Balance) ProtoReflect() protoreflect.Message {
	mi := &file_qubic_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Balance.ProtoReflect.Descriptor instead.
func (*Balance) Descriptor() ([]byte, []int) {
	return file_qubic_proto_rawDescGZIP(), []int{0}
}

func (x *Balance) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Balance) GetBalance() int64 {
	if x != nil {
		return x.Balance
	}
	return 0
}

func (x *Balance) GetValidForTick() uint32 {
	if x != nil {
		return x.ValidForTick
	}
	return 0
}

func (x *Balance) GetLatestIncomingTransferTick() uint32 {
	if x != nil {
		return x.LatestIncomingTransferTick
	}
	return 0
}

func (x *Balance) GetLatestOutgoingTransferTick() uint32 {
	if x != nil {
		return x.LatestOutgoingTransferTick
	}
	return 0
}

func (x *Balance) GetIncomingAmount() int64 {
	if x != nil {
		return x.IncomingAmount
	}
	return 0
}

func (x *Balance) GetOutgoingAmount() int64 {
	if x != nil {
		return x.OutgoingAmount
	}
	return 0
}

func (x *Balance) GetNumberOfIncomingTransfers() uint32 {
	if x != nil {
		return x.NumberOfIncomingTransfers
	}
	return 0
}

func (x *Balance) GetNumberOfOutgoingTransfers() uint32 {
	if x != nil {
		return x.NumberOfOutgoingTransfers
	}
	return 0
}

type GetBalanceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetBalanceRequest) Reset() {
	*x = GetBalanceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qubic_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBalanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBalanceRequest) ProtoMessage() {}

func (x *GetBalanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_qubic_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBalanceRequest.ProtoReflect.Descriptor instead.
func (*GetBalanceRequest) Descriptor() ([]byte, []int) {
	return file_qubic_proto_rawDescGZIP(), []int{1}
}

func (x *GetBalanceRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetBalanceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Balance *Balance `protobuf:"bytes,1,opt,name=balance,proto3" json:"balance,omitempty"`
}

func (x *GetBalanceResponse) Reset() {
	*x = GetBalanceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qubic_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBalanceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBalanceResponse) ProtoMessage() {}

func (x *GetBalanceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_qubic_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBalanceResponse.ProtoReflect.Descriptor instead.
func (*GetBalanceResponse) Descriptor() ([]byte, []int) {
	return file_qubic_proto_rawDescGZIP(), []int{2}
}

func (x *GetBalanceResponse) GetBalance() *Balance {
	if x != nil {
		return x.Balance
	}
	return nil
}

type BroadcastTransactionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EncodedTransaction string `protobuf:"bytes,1,opt,name=encoded_transaction,json=encodedTransaction,proto3" json:"encoded_transaction,omitempty"`
}

func (x *BroadcastTransactionRequest) Reset() {
	*x = BroadcastTransactionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qubic_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BroadcastTransactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BroadcastTransactionRequest) ProtoMessage() {}

func (x *BroadcastTransactionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_qubic_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BroadcastTransactionRequest.ProtoReflect.Descriptor instead.
func (*BroadcastTransactionRequest) Descriptor() ([]byte, []int) {
	return file_qubic_proto_rawDescGZIP(), []int{3}
}

func (x *BroadcastTransactionRequest) GetEncodedTransaction() string {
	if x != nil {
		return x.EncodedTransaction
	}
	return ""
}

type BroadcastTransactionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PeersBroadcasted   int32  `protobuf:"varint,1,opt,name=peers_broadcasted,json=peersBroadcasted,proto3" json:"peers_broadcasted,omitempty"`
	EncodedTransaction string `protobuf:"bytes,2,opt,name=encoded_transaction,json=encodedTransaction,proto3" json:"encoded_transaction,omitempty"`
	TransactionId      string `protobuf:"bytes,3,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
}

func (x *BroadcastTransactionResponse) Reset() {
	*x = BroadcastTransactionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qubic_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BroadcastTransactionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BroadcastTransactionResponse) ProtoMessage() {}

func (x *BroadcastTransactionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_qubic_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BroadcastTransactionResponse.ProtoReflect.Descriptor instead.
func (*BroadcastTransactionResponse) Descriptor() ([]byte, []int) {
	return file_qubic_proto_rawDescGZIP(), []int{4}
}

func (x *BroadcastTransactionResponse) GetPeersBroadcasted() int32 {
	if x != nil {
		return x.PeersBroadcasted
	}
	return 0
}

func (x *BroadcastTransactionResponse) GetEncodedTransaction() string {
	if x != nil {
		return x.EncodedTransaction
	}
	return ""
}

func (x *BroadcastTransactionResponse) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

type TickInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tick        uint32 `protobuf:"varint,1,opt,name=tick,proto3" json:"tick,omitempty"`
	Duration    uint32 `protobuf:"varint,2,opt,name=duration,proto3" json:"duration,omitempty"`
	Epoch       uint32 `protobuf:"varint,3,opt,name=epoch,proto3" json:"epoch,omitempty"`
	InitialTick uint32 `protobuf:"varint,4,opt,name=initial_tick,json=initialTick,proto3" json:"initial_tick,omitempty"`
}

func (x *TickInfo) Reset() {
	*x = TickInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qubic_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TickInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TickInfo) ProtoMessage() {}

func (x *TickInfo) ProtoReflect() protoreflect.Message {
	mi := &file_qubic_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TickInfo.ProtoReflect.Descriptor instead.
func (*TickInfo) Descriptor() ([]byte, []int) {
	return file_qubic_proto_rawDescGZIP(), []int{5}
}

func (x *TickInfo) GetTick() uint32 {
	if x != nil {
		return x.Tick
	}
	return 0
}

func (x *TickInfo) GetDuration() uint32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *TickInfo) GetEpoch() uint32 {
	if x != nil {
		return x.Epoch
	}
	return 0
}

func (x *TickInfo) GetInitialTick() uint32 {
	if x != nil {
		return x.InitialTick
	}
	return 0
}

type GetTickInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TickInfo *TickInfo `protobuf:"bytes,1,opt,name=tick_info,json=tickInfo,proto3" json:"tick_info,omitempty"`
}

func (x *GetTickInfoResponse) Reset() {
	*x = GetTickInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qubic_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTickInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTickInfoResponse) ProtoMessage() {}

func (x *GetTickInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_qubic_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTickInfoResponse.ProtoReflect.Descriptor instead.
func (*GetTickInfoResponse) Descriptor() ([]byte, []int) {
	return file_qubic_proto_rawDescGZIP(), []int{6}
}

func (x *GetTickInfoResponse) GetTickInfo() *TickInfo {
	if x != nil {
		return x.TickInfo
	}
	return nil
}

type GetBlockHeightResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlockHeight *TickInfo `protobuf:"bytes,1,opt,name=block_height,json=blockHeight,proto3" json:"block_height,omitempty"`
}

func (x *GetBlockHeightResponse) Reset() {
	*x = GetBlockHeightResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qubic_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBlockHeightResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBlockHeightResponse) ProtoMessage() {}

func (x *GetBlockHeightResponse) ProtoReflect() protoreflect.Message {
	mi := &file_qubic_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBlockHeightResponse.ProtoReflect.Descriptor instead.
func (*GetBlockHeightResponse) Descriptor() ([]byte, []int) {
	return file_qubic_proto_rawDescGZIP(), []int{7}
}

func (x *GetBlockHeightResponse) GetBlockHeight() *TickInfo {
	if x != nil {
		return x.BlockHeight
	}
	return nil
}

type AssetInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tick          uint32 `protobuf:"varint,1,opt,name=tick,proto3" json:"tick,omitempty"`
	UniverseIndex uint32 `protobuf:"varint,2,opt,name=universe_index,json=universeIndex,proto3" json:"universe_index,omitempty"`
}

func (x *AssetInfo) Reset() {
	*x = AssetInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qubic_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssetInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssetInfo) ProtoMessage() {}

func (x *AssetInfo) ProtoReflect() protoreflect.Message {
	mi := &file_qubic_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssetInfo.ProtoReflect.Descriptor instead.
func (*AssetInfo) Descriptor() ([]byte, []int) {
	return file_qubic_proto_rawDescGZIP(), []int{8}
}

func (x *AssetInfo) GetTick() uint32 {
	if x != nil {
		return x.Tick
	}
	return 0
}

func (x *AssetInfo) GetUniverseIndex() uint32 {
	if x != nil {
		return x.UniverseIndex
	}
	return 0
}

// Issued
type IssuedAssetData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IssuerIdentity        string  `protobuf:"bytes,1,opt,name=issuer_identity,json=issuerIdentity,proto3" json:"issuer_identity,omitempty"`
	Type                  uint32  `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"`
	Name                  string  `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	NumberOfDecimalPlaces int32   `protobuf:"varint,4,opt,name=number_of_decimal_places,json=numberOfDecimalPlaces,proto3" json:"number_of_decimal_places,omitempty"`
	UnitOfMeasurement     []int32 `protobuf:"varint,5,rep,packed,name=unit_of_measurement,json=unitOfMeasurement,proto3" json:"unit_of_measurement,omitempty"`
}

func (x *IssuedAssetData) Reset() {
	*x = IssuedAssetData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qubic_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IssuedAssetData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IssuedAssetData) ProtoMessage() {}

func (x *IssuedAssetData) ProtoReflect() protoreflect.Message {
	mi := &file_qubic_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IssuedAssetData.ProtoReflect.Descriptor instead.
func (*IssuedAssetData) Descriptor() ([]byte, []int) {
	return file_qubic_proto_rawDescGZIP(), []int{9}
}

func (x *IssuedAssetData) GetIssuerIdentity() string {
	if x != nil {
		return x.IssuerIdentity
	}
	return ""
}

func (x *IssuedAssetData) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *IssuedAssetData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *IssuedAssetData) GetNumberOfDecimalPlaces() int32 {
	if x != nil {
		return x.NumberOfDecimalPlaces
	}
	return 0
}

func (x *IssuedAssetData) GetUnitOfMeasurement() []int32 {
	if x != nil {
		return x.UnitOfMeasurement
	}
	return nil
}

type IssuedAsset struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *IssuedAssetData `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Info *AssetInfo       `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *IssuedAsset) Reset() {
	*x = IssuedAsset{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qubic_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IssuedAsset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IssuedAsset) ProtoMessage() {}

func (x *IssuedAsset) ProtoReflect() protoreflect.Message {
	mi := &file_qubic_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IssuedAsset.ProtoReflect.Descriptor instead.
func (*IssuedAsset) Descriptor() ([]byte, []int) {
	return file_qubic_proto_rawDescGZIP(), []int{10}
}

func (x *IssuedAsset) GetData() *IssuedAssetData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *IssuedAsset) GetInfo() *AssetInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type IssuedAssetsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Identity string `protobuf:"bytes,1,opt,name=identity,proto3" json:"identity,omitempty"`
}

func (x *IssuedAssetsRequest) Reset() {
	*x = IssuedAssetsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qubic_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IssuedAssetsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IssuedAssetsRequest) ProtoMessage() {}

func (x *IssuedAssetsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_qubic_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IssuedAssetsRequest.ProtoReflect.Descriptor instead.
func (*IssuedAssetsRequest) Descriptor() ([]byte, []int) {
	return file_qubic_proto_rawDescGZIP(), []int{11}
}

func (x *IssuedAssetsRequest) GetIdentity() string {
	if x != nil {
		return x.Identity
	}
	return ""
}

type IssuedAssetsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IssuedAssets []*IssuedAsset `protobuf:"bytes,1,rep,name=issued_assets,json=issuedAssets,proto3" json:"issued_assets,omitempty"`
}

func (x *IssuedAssetsResponse) Reset() {
	*x = IssuedAssetsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qubic_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IssuedAssetsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IssuedAssetsResponse) ProtoMessage() {}

func (x *IssuedAssetsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_qubic_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IssuedAssetsResponse.ProtoReflect.Descriptor instead.
func (*IssuedAssetsResponse) Descriptor() ([]byte, []int) {
	return file_qubic_proto_rawDescGZIP(), []int{12}
}

func (x *IssuedAssetsResponse) GetIssuedAssets() []*IssuedAsset {
	if x != nil {
		return x.IssuedAssets
	}
	return nil
}

// Owned
type OwnedAssetData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OwnerIdentity         string           `protobuf:"bytes,1,opt,name=owner_identity,json=ownerIdentity,proto3" json:"owner_identity,omitempty"`
	Type                  uint32           `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"`
	Padding               int32            `protobuf:"varint,3,opt,name=padding,proto3" json:"padding,omitempty"`
	ManagingContractIndex uint32           `protobuf:"varint,4,opt,name=managing_contract_index,json=managingContractIndex,proto3" json:"managing_contract_index,omitempty"`
	IssuanceIndex         uint32           `protobuf:"varint,5,opt,name=issuance_index,json=issuanceIndex,proto3" json:"issuance_index,omitempty"`
	NumberOfUnits         int64            `protobuf:"varint,6,opt,name=number_of_units,json=numberOfUnits,proto3" json:"number_of_units,omitempty"`
	IssuedAsset           *IssuedAssetData `protobuf:"bytes,7,opt,name=issued_asset,json=issuedAsset,proto3" json:"issued_asset,omitempty"`
}

func (x *OwnedAssetData) Reset() {
	*x = OwnedAssetData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qubic_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OwnedAssetData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OwnedAssetData) ProtoMessage() {}

func (x *OwnedAssetData) ProtoReflect() protoreflect.Message {
	mi := &file_qubic_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OwnedAssetData.ProtoReflect.Descriptor instead.
func (*OwnedAssetData) Descriptor() ([]byte, []int) {
	return file_qubic_proto_rawDescGZIP(), []int{13}
}

func (x *OwnedAssetData) GetOwnerIdentity() string {
	if x != nil {
		return x.OwnerIdentity
	}
	return ""
}

func (x *OwnedAssetData) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *OwnedAssetData) GetPadding() int32 {
	if x != nil {
		return x.Padding
	}
	return 0
}

func (x *OwnedAssetData) GetManagingContractIndex() uint32 {
	if x != nil {
		return x.ManagingContractIndex
	}
	return 0
}

func (x *OwnedAssetData) GetIssuanceIndex() uint32 {
	if x != nil {
		return x.IssuanceIndex
	}
	return 0
}

func (x *OwnedAssetData) GetNumberOfUnits() int64 {
	if x != nil {
		return x.NumberOfUnits
	}
	return 0
}

func (x *OwnedAssetData) GetIssuedAsset() *IssuedAssetData {
	if x != nil {
		return x.IssuedAsset
	}
	return nil
}

type OwnedAsset struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *OwnedAssetData `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Info *AssetInfo      `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *OwnedAsset) Reset() {
	*x = OwnedAsset{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qubic_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OwnedAsset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OwnedAsset) ProtoMessage() {}

func (x *OwnedAsset) ProtoReflect() protoreflect.Message {
	mi := &file_qubic_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OwnedAsset.ProtoReflect.Descriptor instead.
func (*OwnedAsset) Descriptor() ([]byte, []int) {
	return file_qubic_proto_rawDescGZIP(), []int{14}
}

func (x *OwnedAsset) GetData() *OwnedAssetData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *OwnedAsset) GetInfo() *AssetInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type OwnedAssetsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Identity string `protobuf:"bytes,1,opt,name=identity,proto3" json:"identity,omitempty"`
}

func (x *OwnedAssetsRequest) Reset() {
	*x = OwnedAssetsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qubic_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OwnedAssetsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OwnedAssetsRequest) ProtoMessage() {}

func (x *OwnedAssetsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_qubic_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OwnedAssetsRequest.ProtoReflect.Descriptor instead.
func (*OwnedAssetsRequest) Descriptor() ([]byte, []int) {
	return file_qubic_proto_rawDescGZIP(), []int{15}
}

func (x *OwnedAssetsRequest) GetIdentity() string {
	if x != nil {
		return x.Identity
	}
	return ""
}

type OwnedAssetsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OwnedAssets []*OwnedAsset `protobuf:"bytes,1,rep,name=owned_assets,json=ownedAssets,proto3" json:"owned_assets,omitempty"`
}

func (x *OwnedAssetsResponse) Reset() {
	*x = OwnedAssetsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qubic_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OwnedAssetsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OwnedAssetsResponse) ProtoMessage() {}

func (x *OwnedAssetsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_qubic_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OwnedAssetsResponse.ProtoReflect.Descriptor instead.
func (*OwnedAssetsResponse) Descriptor() ([]byte, []int) {
	return file_qubic_proto_rawDescGZIP(), []int{16}
}

func (x *OwnedAssetsResponse) GetOwnedAssets() []*OwnedAsset {
	if x != nil {
		return x.OwnedAssets
	}
	return nil
}

// Possessed
type PossessedAssetData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PossessorIdentity     string          `protobuf:"bytes,1,opt,name=possessor_identity,json=possessorIdentity,proto3" json:"possessor_identity,omitempty"`
	Type                  uint32          `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"`
	Padding               int32           `protobuf:"varint,3,opt,name=padding,proto3" json:"padding,omitempty"`
	ManagingContractIndex uint32          `protobuf:"varint,4,opt,name=managing_contract_index,json=managingContractIndex,proto3" json:"managing_contract_index,omitempty"`
	IssuanceIndex         uint32          `protobuf:"varint,5,opt,name=issuance_index,json=issuanceIndex,proto3" json:"issuance_index,omitempty"`
	NumberOfUnits         int64           `protobuf:"varint,6,opt,name=number_of_units,json=numberOfUnits,proto3" json:"number_of_units,omitempty"`
	OwnedAsset            *OwnedAssetData `protobuf:"bytes,7,opt,name=owned_asset,json=ownedAsset,proto3" json:"owned_asset,omitempty"`
}

func (x *PossessedAssetData) Reset() {
	*x = PossessedAssetData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qubic_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PossessedAssetData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PossessedAssetData) ProtoMessage() {}

func (x *PossessedAssetData) ProtoReflect() protoreflect.Message {
	mi := &file_qubic_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PossessedAssetData.ProtoReflect.Descriptor instead.
func (*PossessedAssetData) Descriptor() ([]byte, []int) {
	return file_qubic_proto_rawDescGZIP(), []int{17}
}

func (x *PossessedAssetData) GetPossessorIdentity() string {
	if x != nil {
		return x.PossessorIdentity
	}
	return ""
}

func (x *PossessedAssetData) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *PossessedAssetData) GetPadding() int32 {
	if x != nil {
		return x.Padding
	}
	return 0
}

func (x *PossessedAssetData) GetManagingContractIndex() uint32 {
	if x != nil {
		return x.ManagingContractIndex
	}
	return 0
}

func (x *PossessedAssetData) GetIssuanceIndex() uint32 {
	if x != nil {
		return x.IssuanceIndex
	}
	return 0
}

func (x *PossessedAssetData) GetNumberOfUnits() int64 {
	if x != nil {
		return x.NumberOfUnits
	}
	return 0
}

func (x *PossessedAssetData) GetOwnedAsset() *OwnedAssetData {
	if x != nil {
		return x.OwnedAsset
	}
	return nil
}

type PossessedAsset struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *PossessedAssetData `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Info *AssetInfo          `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *PossessedAsset) Reset() {
	*x = PossessedAsset{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qubic_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PossessedAsset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PossessedAsset) ProtoMessage() {}

func (x *PossessedAsset) ProtoReflect() protoreflect.Message {
	mi := &file_qubic_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PossessedAsset.ProtoReflect.Descriptor instead.
func (*PossessedAsset) Descriptor() ([]byte, []int) {
	return file_qubic_proto_rawDescGZIP(), []int{18}
}

func (x *PossessedAsset) GetData() *PossessedAssetData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *PossessedAsset) GetInfo() *AssetInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type PossessedAssetsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Identity string `protobuf:"bytes,1,opt,name=identity,proto3" json:"identity,omitempty"`
}

func (x *PossessedAssetsRequest) Reset() {
	*x = PossessedAssetsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qubic_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PossessedAssetsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PossessedAssetsRequest) ProtoMessage() {}

func (x *PossessedAssetsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_qubic_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PossessedAssetsRequest.ProtoReflect.Descriptor instead.
func (*PossessedAssetsRequest) Descriptor() ([]byte, []int) {
	return file_qubic_proto_rawDescGZIP(), []int{19}
}

func (x *PossessedAssetsRequest) GetIdentity() string {
	if x != nil {
		return x.Identity
	}
	return ""
}

type PossessedAssetsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PossessedAssets []*PossessedAsset `protobuf:"bytes,1,rep,name=possessed_assets,json=possessedAssets,proto3" json:"possessed_assets,omitempty"`
}

func (x *PossessedAssetsResponse) Reset() {
	*x = PossessedAssetsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qubic_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PossessedAssetsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PossessedAssetsResponse) ProtoMessage() {}

func (x *PossessedAssetsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_qubic_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PossessedAssetsResponse.ProtoReflect.Descriptor instead.
func (*PossessedAssetsResponse) Descriptor() ([]byte, []int) {
	return file_qubic_proto_rawDescGZIP(), []int{20}
}

func (x *PossessedAssetsResponse) GetPossessedAssets() []*PossessedAsset {
	if x != nil {
		return x.PossessedAssets
	}
	return nil
}

type QuerySmartContractRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContractIndex uint32 `protobuf:"varint,1,opt,name=contract_index,json=contractIndex,proto3" json:"contract_index,omitempty"`
	InputType     uint32 `protobuf:"varint,2,opt,name=input_type,json=inputType,proto3" json:"input_type,omitempty"`
	InputSize     uint32 `protobuf:"varint,3,opt,name=input_size,json=inputSize,proto3" json:"input_size,omitempty"`
	RequestData   string `protobuf:"bytes,4,opt,name=request_data,json=requestData,proto3" json:"request_data,omitempty"`
}

func (x *QuerySmartContractRequest) Reset() {
	*x = QuerySmartContractRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qubic_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuerySmartContractRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuerySmartContractRequest) ProtoMessage() {}

func (x *QuerySmartContractRequest) ProtoReflect() protoreflect.Message {
	mi := &file_qubic_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuerySmartContractRequest.ProtoReflect.Descriptor instead.
func (*QuerySmartContractRequest) Descriptor() ([]byte, []int) {
	return file_qubic_proto_rawDescGZIP(), []int{21}
}

func (x *QuerySmartContractRequest) GetContractIndex() uint32 {
	if x != nil {
		return x.ContractIndex
	}
	return 0
}

func (x *QuerySmartContractRequest) GetInputType() uint32 {
	if x != nil {
		return x.InputType
	}
	return 0
}

func (x *QuerySmartContractRequest) GetInputSize() uint32 {
	if x != nil {
		return x.InputSize
	}
	return 0
}

func (x *QuerySmartContractRequest) GetRequestData() string {
	if x != nil {
		return x.RequestData
	}
	return ""
}

type QuerySmartContractResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseData string `protobuf:"bytes,5,opt,name=response_data,json=responseData,proto3" json:"response_data,omitempty"`
}

func (x *QuerySmartContractResponse) Reset() {
	*x = QuerySmartContractResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qubic_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuerySmartContractResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuerySmartContractResponse) ProtoMessage() {}

func (x *QuerySmartContractResponse) ProtoReflect() protoreflect.Message {
	mi := &file_qubic_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuerySmartContractResponse.ProtoReflect.Descriptor instead.
func (*QuerySmartContractResponse) Descriptor() ([]byte, []int) {
	return file_qubic_proto_rawDescGZIP(), []int{22}
}

func (x *QuerySmartContractResponse) GetResponseData() string {
	if x != nil {
		return x.ResponseData
	}
	return ""
}

type AssetIssuanceData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IssuerIdentity        string  `protobuf:"bytes,1,opt,name=issuer_identity,json=issuerIdentity,proto3" json:"issuer_identity,omitempty"`
	Type                  uint32  `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"`
	Name                  string  `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	NumberOfDecimalPlaces int32   `protobuf:"varint,4,opt,name=number_of_decimal_places,json=numberOfDecimalPlaces,proto3" json:"number_of_decimal_places,omitempty"`
	UnitOfMeasurement     []int32 `protobuf:"varint,5,rep,packed,name=unit_of_measurement,json=unitOfMeasurement,proto3" json:"unit_of_measurement,omitempty"`
}

func (x *AssetIssuanceData) Reset() {
	*x = AssetIssuanceData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qubic_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssetIssuanceData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssetIssuanceData) ProtoMessage() {}

func (x *AssetIssuanceData) ProtoReflect() protoreflect.Message {
	mi := &file_qubic_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssetIssuanceData.ProtoReflect.Descriptor instead.
func (*AssetIssuanceData) Descriptor() ([]byte, []int) {
	return file_qubic_proto_rawDescGZIP(), []int{23}
}

func (x *AssetIssuanceData) GetIssuerIdentity() string {
	if x != nil {
		return x.IssuerIdentity
	}
	return ""
}

func (x *AssetIssuanceData) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *AssetIssuanceData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AssetIssuanceData) GetNumberOfDecimalPlaces() int32 {
	if x != nil {
		return x.NumberOfDecimalPlaces
	}
	return 0
}

func (x *AssetIssuanceData) GetUnitOfMeasurement() []int32 {
	if x != nil {
		return x.UnitOfMeasurement
	}
	return nil
}

type AssetIssuance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data          *AssetIssuanceData `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Tick          uint32             `protobuf:"varint,2,opt,name=tick,proto3" json:"tick,omitempty"`
	UniverseIndex uint32             `protobuf:"varint,3,opt,name=universe_index,json=universeIndex,proto3" json:"universe_index,omitempty"`
}

func (x *AssetIssuance) Reset() {
	*x = AssetIssuance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qubic_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssetIssuance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssetIssuance) ProtoMessage() {}

func (x *AssetIssuance) ProtoReflect() protoreflect.Message {
	mi := &file_qubic_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssetIssuance.ProtoReflect.Descriptor instead.
func (*AssetIssuance) Descriptor() ([]byte, []int) {
	return file_qubic_proto_rawDescGZIP(), []int{24}
}

func (x *AssetIssuance) GetData() *AssetIssuanceData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *AssetIssuance) GetTick() uint32 {
	if x != nil {
		return x.Tick
	}
	return 0
}

func (x *AssetIssuance) GetUniverseIndex() uint32 {
	if x != nil {
		return x.UniverseIndex
	}
	return 0
}

type AssetIssuances struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Assets []*AssetIssuance `protobuf:"bytes,1,rep,name=assets,proto3" json:"assets,omitempty"`
}

func (x *AssetIssuances) Reset() {
	*x = AssetIssuances{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qubic_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssetIssuances) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssetIssuances) ProtoMessage() {}

func (x *AssetIssuances) ProtoReflect() protoreflect.Message {
	mi := &file_qubic_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssetIssuances.ProtoReflect.Descriptor instead.
func (*AssetIssuances) Descriptor() ([]byte, []int) {
	return file_qubic_proto_rawDescGZIP(), []int{25}
}

func (x *AssetIssuances) GetAssets() []*AssetIssuance {
	if x != nil {
		return x.Assets
	}
	return nil
}

type AssetOwnershipData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OwnerIdentity         string `protobuf:"bytes,1,opt,name=owner_identity,json=ownerIdentity,proto3" json:"owner_identity,omitempty"`
	Type                  uint32 `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"`
	ManagingContractIndex uint32 `protobuf:"varint,3,opt,name=managing_contract_index,json=managingContractIndex,proto3" json:"managing_contract_index,omitempty"`
	IssuanceIndex         uint32 `protobuf:"varint,4,opt,name=issuance_index,json=issuanceIndex,proto3" json:"issuance_index,omitempty"`
	NumberOfUnits         int64  `protobuf:"varint,5,opt,name=number_of_units,json=numberOfUnits,proto3" json:"number_of_units,omitempty"`
}

func (x *AssetOwnershipData) Reset() {
	*x = AssetOwnershipData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qubic_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssetOwnershipData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssetOwnershipData) ProtoMessage() {}

func (x *AssetOwnershipData) ProtoReflect() protoreflect.Message {
	mi := &file_qubic_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssetOwnershipData.ProtoReflect.Descriptor instead.
func (*AssetOwnershipData) Descriptor() ([]byte, []int) {
	return file_qubic_proto_rawDescGZIP(), []int{26}
}

func (x *AssetOwnershipData) GetOwnerIdentity() string {
	if x != nil {
		return x.OwnerIdentity
	}
	return ""
}

func (x *AssetOwnershipData) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *AssetOwnershipData) GetManagingContractIndex() uint32 {
	if x != nil {
		return x.ManagingContractIndex
	}
	return 0
}

func (x *AssetOwnershipData) GetIssuanceIndex() uint32 {
	if x != nil {
		return x.IssuanceIndex
	}
	return 0
}

func (x *AssetOwnershipData) GetNumberOfUnits() int64 {
	if x != nil {
		return x.NumberOfUnits
	}
	return 0
}

type AssetOwnership struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data          *AssetOwnershipData `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Tick          uint32              `protobuf:"varint,2,opt,name=tick,proto3" json:"tick,omitempty"`
	UniverseIndex uint32              `protobuf:"varint,3,opt,name=universe_index,json=universeIndex,proto3" json:"universe_index,omitempty"`
}

func (x *AssetOwnership) Reset() {
	*x = AssetOwnership{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qubic_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssetOwnership) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssetOwnership) ProtoMessage() {}

func (x *AssetOwnership) ProtoReflect() protoreflect.Message {
	mi := &file_qubic_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssetOwnership.ProtoReflect.Descriptor instead.
func (*AssetOwnership) Descriptor() ([]byte, []int) {
	return file_qubic_proto_rawDescGZIP(), []int{27}
}

func (x *AssetOwnership) GetData() *AssetOwnershipData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *AssetOwnership) GetTick() uint32 {
	if x != nil {
		return x.Tick
	}
	return 0
}

func (x *AssetOwnership) GetUniverseIndex() uint32 {
	if x != nil {
		return x.UniverseIndex
	}
	return 0
}

type AssetOwnerships struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Assets []*AssetOwnership `protobuf:"bytes,1,rep,name=assets,proto3" json:"assets,omitempty"`
}

func (x *AssetOwnerships) Reset() {
	*x = AssetOwnerships{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qubic_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssetOwnerships) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssetOwnerships) ProtoMessage() {}

func (x *AssetOwnerships) ProtoReflect() protoreflect.Message {
	mi := &file_qubic_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssetOwnerships.ProtoReflect.Descriptor instead.
func (*AssetOwnerships) Descriptor() ([]byte, []int) {
	return file_qubic_proto_rawDescGZIP(), []int{28}
}

func (x *AssetOwnerships) GetAssets() []*AssetOwnership {
	if x != nil {
		return x.Assets
	}
	return nil
}

type AssetPossessionData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PossessorIdentity     string `protobuf:"bytes,1,opt,name=possessor_identity,json=possessorIdentity,proto3" json:"possessor_identity,omitempty"`
	Type                  uint32 `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"`
	ManagingContractIndex uint32 `protobuf:"varint,3,opt,name=managing_contract_index,json=managingContractIndex,proto3" json:"managing_contract_index,omitempty"`
	OwnershipIndex        uint32 `protobuf:"varint,4,opt,name=ownership_index,json=ownershipIndex,proto3" json:"ownership_index,omitempty"`
	NumberOfUnits         int64  `protobuf:"varint,5,opt,name=number_of_units,json=numberOfUnits,proto3" json:"number_of_units,omitempty"`
}

func (x *AssetPossessionData) Reset() {
	*x = AssetPossessionData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qubic_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssetPossessionData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssetPossessionData) ProtoMessage() {}

func (x *AssetPossessionData) ProtoReflect() protoreflect.Message {
	mi := &file_qubic_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssetPossessionData.ProtoReflect.Descriptor instead.
func (*AssetPossessionData) Descriptor() ([]byte, []int) {
	return file_qubic_proto_rawDescGZIP(), []int{29}
}

func (x *AssetPossessionData) GetPossessorIdentity() string {
	if x != nil {
		return x.PossessorIdentity
	}
	return ""
}

func (x *AssetPossessionData) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *AssetPossessionData) GetManagingContractIndex() uint32 {
	if x != nil {
		return x.ManagingContractIndex
	}
	return 0
}

func (x *AssetPossessionData) GetOwnershipIndex() uint32 {
	if x != nil {
		return x.OwnershipIndex
	}
	return 0
}

func (x *AssetPossessionData) GetNumberOfUnits() int64 {
	if x != nil {
		return x.NumberOfUnits
	}
	return 0
}

type AssetPossession struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data          *AssetPossessionData `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Tick          uint32               `protobuf:"varint,2,opt,name=tick,proto3" json:"tick,omitempty"`
	UniverseIndex uint32               `protobuf:"varint,3,opt,name=universe_index,json=universeIndex,proto3" json:"universe_index,omitempty"`
}

func (x *AssetPossession) Reset() {
	*x = AssetPossession{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qubic_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssetPossession) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssetPossession) ProtoMessage() {}

func (x *AssetPossession) ProtoReflect() protoreflect.Message {
	mi := &file_qubic_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssetPossession.ProtoReflect.Descriptor instead.
func (*AssetPossession) Descriptor() ([]byte, []int) {
	return file_qubic_proto_rawDescGZIP(), []int{30}
}

func (x *AssetPossession) GetData() *AssetPossessionData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *AssetPossession) GetTick() uint32 {
	if x != nil {
		return x.Tick
	}
	return 0
}

func (x *AssetPossession) GetUniverseIndex() uint32 {
	if x != nil {
		return x.UniverseIndex
	}
	return 0
}

type AssetPossessions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Assets []*AssetPossession `protobuf:"bytes,1,rep,name=assets,proto3" json:"assets,omitempty"`
}

func (x *AssetPossessions) Reset() {
	*x = AssetPossessions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qubic_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssetPossessions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssetPossessions) ProtoMessage() {}

func (x *AssetPossessions) ProtoReflect() protoreflect.Message {
	mi := &file_qubic_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssetPossessions.ProtoReflect.Descriptor instead.
func (*AssetPossessions) Descriptor() ([]byte, []int) {
	return file_qubic_proto_rawDescGZIP(), []int{31}
}

func (x *AssetPossessions) GetAssets() []*AssetPossession {
	if x != nil {
		return x.Assets
	}
	return nil
}

type GetIssuedAssetByUniverseIndexRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index uint32 `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
}

func (x *GetIssuedAssetByUniverseIndexRequest) Reset() {
	*x = GetIssuedAssetByUniverseIndexRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qubic_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetIssuedAssetByUniverseIndexRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIssuedAssetByUniverseIndexRequest) ProtoMessage() {}

func (x *GetIssuedAssetByUniverseIndexRequest) ProtoReflect() protoreflect.Message {
	mi := &file_qubic_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIssuedAssetByUniverseIndexRequest.ProtoReflect.Descriptor instead.
func (*GetIssuedAssetByUniverseIndexRequest) Descriptor() ([]byte, []int) {
	return file_qubic_proto_rawDescGZIP(), []int{32}
}

func (x *GetIssuedAssetByUniverseIndexRequest) GetIndex() uint32 {
	if x != nil {
		return x.Index
	}
	return 0
}

type GetIssuedAssetsByFilterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IssuerIdentity string `protobuf:"bytes,1,opt,name=issuer_identity,json=issuerIdentity,proto3" json:"issuer_identity,omitempty"`
	AssetName      string `protobuf:"bytes,2,opt,name=asset_name,json=assetName,proto3" json:"asset_name,omitempty"`
}

func (x *GetIssuedAssetsByFilterRequest) Reset() {
	*x = GetIssuedAssetsByFilterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qubic_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetIssuedAssetsByFilterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIssuedAssetsByFilterRequest) ProtoMessage() {}

func (x *GetIssuedAssetsByFilterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_qubic_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIssuedAssetsByFilterRequest.ProtoReflect.Descriptor instead.
func (*GetIssuedAssetsByFilterRequest) Descriptor() ([]byte, []int) {
	return file_qubic_proto_rawDescGZIP(), []int{33}
}

func (x *GetIssuedAssetsByFilterRequest) GetIssuerIdentity() string {
	if x != nil {
		return x.IssuerIdentity
	}
	return ""
}

func (x *GetIssuedAssetsByFilterRequest) GetAssetName() string {
	if x != nil {
		return x.AssetName
	}
	return ""
}

type GetOwnedAssetsByFilterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IssuerIdentity            string `protobuf:"bytes,1,opt,name=issuer_identity,json=issuerIdentity,proto3" json:"issuer_identity,omitempty"`
	AssetName                 string `protobuf:"bytes,2,opt,name=asset_name,json=assetName,proto3" json:"asset_name,omitempty"`
	OwnerIdentity             string `protobuf:"bytes,3,opt,name=owner_identity,json=ownerIdentity,proto3" json:"owner_identity,omitempty"`
	OwnershipManagingContract uint32 `protobuf:"varint,4,opt,name=ownership_managing_contract,json=ownershipManagingContract,proto3" json:"ownership_managing_contract,omitempty"`
}

func (x *GetOwnedAssetsByFilterRequest) Reset() {
	*x = GetOwnedAssetsByFilterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qubic_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOwnedAssetsByFilterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOwnedAssetsByFilterRequest) ProtoMessage() {}

func (x *GetOwnedAssetsByFilterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_qubic_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOwnedAssetsByFilterRequest.ProtoReflect.Descriptor instead.
func (*GetOwnedAssetsByFilterRequest) Descriptor() ([]byte, []int) {
	return file_qubic_proto_rawDescGZIP(), []int{34}
}

func (x *GetOwnedAssetsByFilterRequest) GetIssuerIdentity() string {
	if x != nil {
		return x.IssuerIdentity
	}
	return ""
}

func (x *GetOwnedAssetsByFilterRequest) GetAssetName() string {
	if x != nil {
		return x.AssetName
	}
	return ""
}

func (x *GetOwnedAssetsByFilterRequest) GetOwnerIdentity() string {
	if x != nil {
		return x.OwnerIdentity
	}
	return ""
}

func (x *GetOwnedAssetsByFilterRequest) GetOwnershipManagingContract() uint32 {
	if x != nil {
		return x.OwnershipManagingContract
	}
	return 0
}

type GetPossessedAssetsByFilterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IssuerIdentity             string `protobuf:"bytes,1,opt,name=issuer_identity,json=issuerIdentity,proto3" json:"issuer_identity,omitempty"`
	AssetName                  string `protobuf:"bytes,2,opt,name=asset_name,json=assetName,proto3" json:"asset_name,omitempty"`
	OwnerIdentity              string `protobuf:"bytes,3,opt,name=owner_identity,json=ownerIdentity,proto3" json:"owner_identity,omitempty"`
	PossessorIdentity          string `protobuf:"bytes,4,opt,name=possessor_identity,json=possessorIdentity,proto3" json:"possessor_identity,omitempty"`
	OwnershipManagingContract  uint32 `protobuf:"varint,5,opt,name=ownership_managing_contract,json=ownershipManagingContract,proto3" json:"ownership_managing_contract,omitempty"`
	PossessionManagingContract uint32 `protobuf:"varint,6,opt,name=possession_managing_contract,json=possessionManagingContract,proto3" json:"possession_managing_contract,omitempty"`
}

func (x *GetPossessedAssetsByFilterRequest) Reset() {
	*x = GetPossessedAssetsByFilterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qubic_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPossessedAssetsByFilterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPossessedAssetsByFilterRequest) ProtoMessage() {}

func (x *GetPossessedAssetsByFilterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_qubic_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPossessedAssetsByFilterRequest.ProtoReflect.Descriptor instead.
func (*GetPossessedAssetsByFilterRequest) Descriptor() ([]byte, []int) {
	return file_qubic_proto_rawDescGZIP(), []int{35}
}

func (x *GetPossessedAssetsByFilterRequest) GetIssuerIdentity() string {
	if x != nil {
		return x.IssuerIdentity
	}
	return ""
}

func (x *GetPossessedAssetsByFilterRequest) GetAssetName() string {
	if x != nil {
		return x.AssetName
	}
	return ""
}

func (x *GetPossessedAssetsByFilterRequest) GetOwnerIdentity() string {
	if x != nil {
		return x.OwnerIdentity
	}
	return ""
}

func (x *GetPossessedAssetsByFilterRequest) GetPossessorIdentity() string {
	if x != nil {
		return x.PossessorIdentity
	}
	return ""
}

func (x *GetPossessedAssetsByFilterRequest) GetOwnershipManagingContract() uint32 {
	if x != nil {
		return x.OwnershipManagingContract
	}
	return 0
}

func (x *GetPossessedAssetsByFilterRequest) GetPossessionManagingContract() uint32 {
	if x != nil {
		return x.PossessionManagingContract
	}
	return 0
}

var File_qubic_proto protoreflect.FileDescriptor

var file_qubic_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x71, 0x75, 0x62, 0x69, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x13, 0x71,
	0x75, 0x62, 0x69, 0x63, 0x2e, 0x68, 0x74, 0x74, 0x70, 0x2e, 0x71, 0x75, 0x62, 0x69, 0x63, 0x2e,
	0x70, 0x62, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61,
	0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb3, 0x03,
	0x0a, 0x07, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x62, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x5f, 0x66, 0x6f, 0x72,
	0x5f, 0x74, 0x69, 0x63, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x46, 0x6f, 0x72, 0x54, 0x69, 0x63, 0x6b, 0x12, 0x41, 0x0a, 0x1d, 0x6c, 0x61, 0x74,
	0x65, 0x73, 0x74, 0x5f, 0x69, 0x6e, 0x63, 0x6f, 0x6d, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x65, 0x72, 0x5f, 0x74, 0x69, 0x63, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x1a, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x69, 0x6e, 0x67,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x54, 0x69, 0x63, 0x6b, 0x12, 0x41, 0x0a, 0x1d,
	0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x6f, 0x75, 0x74, 0x67, 0x6f, 0x69, 0x6e, 0x67, 0x5f,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x5f, 0x74, 0x69, 0x63, 0x6b, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x1a, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x4f, 0x75, 0x74, 0x67, 0x6f,
	0x69, 0x6e, 0x67, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x54, 0x69, 0x63, 0x6b, 0x12,
	0x27, 0x0a, 0x0f, 0x69, 0x6e, 0x63, 0x6f, 0x6d, 0x69, 0x6e, 0x67, 0x5f, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x69, 0x6e, 0x63, 0x6f, 0x6d, 0x69,
	0x6e, 0x67, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x6f, 0x75, 0x74, 0x67,
	0x6f, 0x69, 0x6e, 0x67, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0e, 0x6f, 0x75, 0x74, 0x67, 0x6f, 0x69, 0x6e, 0x67, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x3f, 0x0a, 0x1c, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6f, 0x66, 0x5f, 0x69,
	0x6e, 0x63, 0x6f, 0x6d, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72,
	0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x19, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f,
	0x66, 0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x69, 0x6e, 0x67, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65,
	0x72, 0x73, 0x12, 0x3f, 0x0a, 0x1c, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6f, 0x66, 0x5f,
	0x6f, 0x75, 0x74, 0x67, 0x6f, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65,
	0x72, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x19, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x4f, 0x66, 0x4f, 0x75, 0x74, 0x67, 0x6f, 0x69, 0x6e, 0x67, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66,
	0x65, 0x72, 0x73, 0x22, 0x23, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x4c, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x42,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36,
	0x0a, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x71, 0x75, 0x62, 0x69, 0x63, 0x2e, 0x68, 0x74, 0x74, 0x70, 0x2e, 0x71, 0x75, 0x62,
	0x69, 0x63, 0x2e, 0x70, 0x62, 0x2e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x07, 0x62,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x22, 0x4e, 0x0a, 0x1b, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63,
	0x61, 0x73, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x13, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64,
	0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x12, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xa3, 0x01, 0x0a, 0x1c, 0x42, 0x72, 0x6f, 0x61, 0x64,
	0x63, 0x61, 0x73, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x70, 0x65, 0x65, 0x72, 0x73,
	0x5f, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x10, 0x70, 0x65, 0x65, 0x72, 0x73, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61,
	0x73, 0x74, 0x65, 0x64, 0x12, 0x2f, 0x0a, 0x13, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x5f,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x12, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x73, 0x0a, 0x08,
	0x54, 0x69, 0x63, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x63, 0x6b,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x74, 0x69, 0x63, 0x6b, 0x12, 0x1a, 0x0a, 0x08,
	0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08,
	0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x70, 0x6f, 0x63,
	0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x12, 0x21,
	0x0a, 0x0c, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x74, 0x69, 0x63, 0x6b, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x54, 0x69, 0x63,
	0x6b, 0x22, 0x51, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x54, 0x69, 0x63, 0x6b, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x09, 0x74, 0x69, 0x63, 0x6b,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x71, 0x75,
	0x62, 0x69, 0x63, 0x2e, 0x68, 0x74, 0x74, 0x70, 0x2e, 0x71, 0x75, 0x62, 0x69, 0x63, 0x2e, 0x70,
	0x62, 0x2e, 0x54, 0x69, 0x63, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x74, 0x69, 0x63, 0x6b,
	0x49, 0x6e, 0x66, 0x6f, 0x22, 0x5a, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40,
	0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x71, 0x75, 0x62, 0x69, 0x63, 0x2e, 0x68, 0x74, 0x74,
	0x70, 0x2e, 0x71, 0x75, 0x62, 0x69, 0x63, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x69, 0x63, 0x6b, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x22, 0x46, 0x0a, 0x09, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x69, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x74, 0x69, 0x63,
	0x6b, 0x12, 0x25, 0x0a, 0x0e, 0x75, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x65, 0x5f, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x75, 0x6e, 0x69, 0x76, 0x65,
	0x72, 0x73, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x22, 0xcb, 0x01, 0x0a, 0x0f, 0x49, 0x73, 0x73,
	0x75, 0x65, 0x64, 0x41, 0x73, 0x73, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x27, 0x0a, 0x0f,
	0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x49, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x37, 0x0a,
	0x18, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6f, 0x66, 0x5f, 0x64, 0x65, 0x63, 0x69, 0x6d,
	0x61, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x15, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x44, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c,
	0x50, 0x6c, 0x61, 0x63, 0x65, 0x73, 0x12, 0x2e, 0x0a, 0x13, 0x75, 0x6e, 0x69, 0x74, 0x5f, 0x6f,
	0x66, 0x5f, 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x05, 0x52, 0x11, 0x75, 0x6e, 0x69, 0x74, 0x4f, 0x66, 0x4d, 0x65, 0x61, 0x73, 0x75,
	0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x7b, 0x0a, 0x0b, 0x49, 0x73, 0x73, 0x75, 0x65, 0x64,
	0x41, 0x73, 0x73, 0x65, 0x74, 0x12, 0x38, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x71, 0x75, 0x62, 0x69, 0x63, 0x2e, 0x68, 0x74, 0x74, 0x70,
	0x2e, 0x71, 0x75, 0x62, 0x69, 0x63, 0x2e, 0x70, 0x62, 0x2e, 0x49, 0x73, 0x73, 0x75, 0x65, 0x64,
	0x41, 0x73, 0x73, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12,
	0x32, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x71, 0x75, 0x62, 0x69, 0x63, 0x2e, 0x68, 0x74, 0x74, 0x70, 0x2e, 0x71, 0x75, 0x62, 0x69, 0x63,
	0x2e, 0x70, 0x62, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69,
	0x6e, 0x66, 0x6f, 0x22, 0x31, 0x0a, 0x13, 0x49, 0x73, 0x73, 0x75, 0x65, 0x64, 0x41, 0x73, 0x73,
	0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0x5d, 0x0a, 0x14, 0x49, 0x73, 0x73, 0x75, 0x65, 0x64,
	0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45,
	0x0a, 0x0d, 0x69, 0x73, 0x73, 0x75, 0x65, 0x64, 0x5f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x71, 0x75, 0x62, 0x69, 0x63, 0x2e, 0x68, 0x74,
	0x74, 0x70, 0x2e, 0x71, 0x75, 0x62, 0x69, 0x63, 0x2e, 0x70, 0x62, 0x2e, 0x49, 0x73, 0x73, 0x75,
	0x65, 0x64, 0x41, 0x73, 0x73, 0x65, 0x74, 0x52, 0x0c, 0x69, 0x73, 0x73, 0x75, 0x65, 0x64, 0x41,
	0x73, 0x73, 0x65, 0x74, 0x73, 0x22, 0xb5, 0x02, 0x0a, 0x0e, 0x4f, 0x77, 0x6e, 0x65, 0x64, 0x41,
	0x73, 0x73, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x25, 0x0a, 0x0e, 0x6f, 0x77, 0x6e, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x70, 0x61, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x36, 0x0a,
	0x17, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x15,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x25, 0x0a, 0x0e, 0x69, 0x73, 0x73, 0x75, 0x61, 0x6e, 0x63,
	0x65, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x69,
	0x73, 0x73, 0x75, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x26, 0x0a, 0x0f,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6f, 0x66, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x73, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x55,
	0x6e, 0x69, 0x74, 0x73, 0x12, 0x47, 0x0a, 0x0c, 0x69, 0x73, 0x73, 0x75, 0x65, 0x64, 0x5f, 0x61,
	0x73, 0x73, 0x65, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x71, 0x75, 0x62,
	0x69, 0x63, 0x2e, 0x68, 0x74, 0x74, 0x70, 0x2e, 0x71, 0x75, 0x62, 0x69, 0x63, 0x2e, 0x70, 0x62,
	0x2e, 0x49, 0x73, 0x73, 0x75, 0x65, 0x64, 0x41, 0x73, 0x73, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x0b, 0x69, 0x73, 0x73, 0x75, 0x65, 0x64, 0x41, 0x73, 0x73, 0x65, 0x74, 0x22, 0x79, 0x0a,
	0x0a, 0x4f, 0x77, 0x6e, 0x65, 0x64, 0x41, 0x73, 0x73, 0x65, 0x74, 0x12, 0x37, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x71, 0x75, 0x62, 0x69,
	0x63, 0x2e, 0x68, 0x74, 0x74, 0x70, 0x2e, 0x71, 0x75, 0x62, 0x69, 0x63, 0x2e, 0x70, 0x62, 0x2e,
	0x4f, 0x77, 0x6e, 0x65, 0x64, 0x41, 0x73, 0x73, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x12, 0x32, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x71, 0x75, 0x62, 0x69, 0x63, 0x2e, 0x68, 0x74, 0x74, 0x70, 0x2e,
	0x71, 0x75, 0x62, 0x69, 0x63, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x30, 0x0a, 0x12, 0x4f, 0x77, 0x6e, 0x65,
	0x64, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0x59, 0x0a, 0x13, 0x4f, 0x77,
	0x6e, 0x65, 0x64, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x42, 0x0a, 0x0c, 0x6f, 0x77, 0x6e, 0x65, 0x64, 0x5f, 0x61, 0x73, 0x73, 0x65, 0x74,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x71, 0x75, 0x62, 0x69, 0x63, 0x2e,
	0x68, 0x74, 0x74, 0x70, 0x2e, 0x71, 0x75, 0x62, 0x69, 0x63, 0x2e, 0x70, 0x62, 0x2e, 0x4f, 0x77,
	0x6e, 0x65, 0x64, 0x41, 0x73, 0x73, 0x65, 0x74, 0x52, 0x0b, 0x6f, 0x77, 0x6e, 0x65, 0x64, 0x41,
	0x73, 0x73, 0x65, 0x74, 0x73, 0x22, 0xbe, 0x02, 0x0a, 0x12, 0x50, 0x6f, 0x73, 0x73, 0x65, 0x73,
	0x73, 0x65, 0x64, 0x41, 0x73, 0x73, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2d, 0x0a, 0x12,
	0x70, 0x6f, 0x73, 0x73, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x70, 0x6f, 0x73, 0x73, 0x65, 0x73,
	0x73, 0x6f, 0x72, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x70, 0x61, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x70, 0x61, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x36, 0x0a, 0x17, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x15, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x12, 0x25, 0x0a, 0x0e, 0x69, 0x73, 0x73, 0x75, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x69, 0x73, 0x73, 0x75, 0x61,
	0x6e, 0x63, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x5f, 0x6f, 0x66, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0d, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x55, 0x6e, 0x69, 0x74, 0x73,
	0x12, 0x44, 0x0a, 0x0b, 0x6f, 0x77, 0x6e, 0x65, 0x64, 0x5f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x71, 0x75, 0x62, 0x69, 0x63, 0x2e, 0x68, 0x74,
	0x74, 0x70, 0x2e, 0x71, 0x75, 0x62, 0x69, 0x63, 0x2e, 0x70, 0x62, 0x2e, 0x4f, 0x77, 0x6e, 0x65,
	0x64, 0x41, 0x73, 0x73, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0a, 0x6f, 0x77, 0x6e, 0x65,
	0x64, 0x41, 0x73, 0x73, 0x65, 0x74, 0x22, 0x81, 0x01, 0x0a, 0x0e, 0x50, 0x6f, 0x73, 0x73, 0x65,
	0x73, 0x73, 0x65, 0x64, 0x41, 0x73, 0x73, 0x65, 0x74, 0x12, 0x3b, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x71, 0x75, 0x62, 0x69, 0x63, 0x2e,
	0x68, 0x74, 0x74, 0x70, 0x2e, 0x71, 0x75, 0x62, 0x69, 0x63, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x6f,
	0x73, 0x73, 0x65, 0x73, 0x73, 0x65, 0x64, 0x41, 0x73, 0x73, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x32, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x71, 0x75, 0x62, 0x69, 0x63, 0x2e, 0x68, 0x74, 0x74,
	0x70, 0x2e, 0x71, 0x75, 0x62, 0x69, 0x63, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x34, 0x0a, 0x16, 0x50, 0x6f,
	0x73, 0x73, 0x65, 0x73, 0x73, 0x65, 0x64, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x22, 0x69, 0x0a, 0x17, 0x50, 0x6f, 0x73, 0x73, 0x65, 0x73, 0x73, 0x65, 0x64, 0x41, 0x73, 0x73,
	0x65, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4e, 0x0a, 0x10, 0x70,
	0x6f, 0x73, 0x73, 0x65, 0x73, 0x73, 0x65, 0x64, 0x5f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x71, 0x75, 0x62, 0x69, 0x63, 0x2e, 0x68, 0x74,
	0x74, 0x70, 0x2e, 0x71, 0x75, 0x62, 0x69, 0x63, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x6f, 0x73, 0x73,
	0x65, 0x73, 0x73, 0x65, 0x64, 0x41, 0x73, 0x73, 0x65, 0x74, 0x52, 0x0f, 0x70, 0x6f, 0x73, 0x73,
	0x65, 0x73, 0x73, 0x65, 0x64, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x22, 0xa3, 0x01, 0x0a, 0x19,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x09, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x21,
	0x0a, 0x0c, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x22, 0x41, 0x0a, 0x1a, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x23, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x22, 0xcd, 0x01, 0x0a, 0x11, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x73,
	0x73, 0x75, 0x61, 0x6e, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x27, 0x0a, 0x0f, 0x69, 0x73,
	0x73, 0x75, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x49, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x37, 0x0a, 0x18, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6f, 0x66, 0x5f, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c,
	0x5f, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x15, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x44, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x50, 0x6c,
	0x61, 0x63, 0x65, 0x73, 0x12, 0x2e, 0x0a, 0x13, 0x75, 0x6e, 0x69, 0x74, 0x5f, 0x6f, 0x66, 0x5f,
	0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x05, 0x52, 0x11, 0x75, 0x6e, 0x69, 0x74, 0x4f, 0x66, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x22, 0x86, 0x01, 0x0a, 0x0d, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x73,
	0x73, 0x75, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x3a, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x71, 0x75, 0x62, 0x69, 0x63, 0x2e, 0x68, 0x74, 0x74,
	0x70, 0x2e, 0x71, 0x75, 0x62, 0x69, 0x63, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74,
	0x49, 0x73, 0x73, 0x75, 0x61, 0x6e, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x04, 0x74, 0x69, 0x63, 0x6b, 0x12, 0x25, 0x0a, 0x0e, 0x75, 0x6e, 0x69, 0x76, 0x65, 0x72,
	0x73, 0x65, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d,
	0x75, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x4c, 0x0a,
	0x0e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x73, 0x73, 0x75, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x12,
	0x3a, 0x0a, 0x06, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x22, 0x2e, 0x71, 0x75, 0x62, 0x69, 0x63, 0x2e, 0x68, 0x74, 0x74, 0x70, 0x2e, 0x71, 0x75, 0x62,
	0x69, 0x63, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x73, 0x73, 0x75, 0x61,
	0x6e, 0x63, 0x65, 0x52, 0x06, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x22, 0xd6, 0x01, 0x0a, 0x12,
	0x41, 0x73, 0x73, 0x65, 0x74, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x25, 0x0a, 0x0e, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6f, 0x77, 0x6e, 0x65,
	0x72, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x36, 0x0a,
	0x17, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x15,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x25, 0x0a, 0x0e, 0x69, 0x73, 0x73, 0x75, 0x61, 0x6e, 0x63,
	0x65, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x69,
	0x73, 0x73, 0x75, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x26, 0x0a, 0x0f,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6f, 0x66, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x73, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x55,
	0x6e, 0x69, 0x74, 0x73, 0x22, 0x88, 0x01, 0x0a, 0x0e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x4f, 0x77,
	0x6e, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x12, 0x3b, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x71, 0x75, 0x62, 0x69, 0x63, 0x2e, 0x68, 0x74,
	0x74, 0x70, 0x2e, 0x71, 0x75, 0x62, 0x69, 0x63, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x73, 0x73, 0x65,
	0x74, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x04, 0x74, 0x69, 0x63, 0x6b, 0x12, 0x25, 0x0a, 0x0e, 0x75, 0x6e, 0x69, 0x76,
	0x65, 0x72, 0x73, 0x65, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0d, 0x75, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x22,
	0x4e, 0x0a, 0x0f, 0x41, 0x73, 0x73, 0x65, 0x74, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x73, 0x68, 0x69,
	0x70, 0x73, 0x12, 0x3b, 0x0a, 0x06, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x23, 0x2e, 0x71, 0x75, 0x62, 0x69, 0x63, 0x2e, 0x68, 0x74, 0x74, 0x70, 0x2e,
	0x71, 0x75, 0x62, 0x69, 0x63, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x4f, 0x77,
	0x6e, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x52, 0x06, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x22,
	0xe1, 0x01, 0x0a, 0x13, 0x41, 0x73, 0x73, 0x65, 0x74, 0x50, 0x6f, 0x73, 0x73, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2d, 0x0a, 0x12, 0x70, 0x6f, 0x73, 0x73, 0x65,
	0x73, 0x73, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x11, 0x70, 0x6f, 0x73, 0x73, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x49, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x36, 0x0a, 0x17, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x15, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x12, 0x27, 0x0a, 0x0f, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x5f,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x6f, 0x77, 0x6e,
	0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x26, 0x0a, 0x0f, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6f, 0x66, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x55, 0x6e,
	0x69, 0x74, 0x73, 0x22, 0x8a, 0x01, 0x0a, 0x0f, 0x41, 0x73, 0x73, 0x65, 0x74, 0x50, 0x6f, 0x73,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x3c, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x71, 0x75, 0x62, 0x69, 0x63, 0x2e, 0x68, 0x74,
	0x74, 0x70, 0x2e, 0x71, 0x75, 0x62, 0x69, 0x63, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x73, 0x73, 0x65,
	0x74, 0x50, 0x6f, 0x73, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x63, 0x6b, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x04, 0x74, 0x69, 0x63, 0x6b, 0x12, 0x25, 0x0a, 0x0e, 0x75, 0x6e, 0x69,
	0x76, 0x65, 0x72, 0x73, 0x65, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0d, 0x75, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x22, 0x50, 0x0a, 0x10, 0x41, 0x73, 0x73, 0x65, 0x74, 0x50, 0x6f, 0x73, 0x73, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x3c, 0x0a, 0x06, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x71, 0x75, 0x62, 0x69, 0x63, 0x2e, 0x68, 0x74, 0x74,
	0x70, 0x2e, 0x71, 0x75, 0x62, 0x69, 0x63, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74,
	0x50, 0x6f, 0x73, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x61, 0x73, 0x73, 0x65,
	0x74, 0x73, 0x22, 0x3c, 0x0a, 0x24, 0x47, 0x65, 0x74, 0x49, 0x73, 0x73, 0x75, 0x65, 0x64, 0x41,
	0x73, 0x73, 0x65, 0x74, 0x42, 0x79, 0x55, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x65, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x22, 0x68, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x49, 0x73, 0x73, 0x75, 0x65, 0x64, 0x41, 0x73, 0x73,
	0x65, 0x74, 0x73, 0x42, 0x79, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x69, 0x73, 0x73,
	0x75, 0x65, 0x72, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x61,
	0x73, 0x73, 0x65, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x61, 0x73, 0x73, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xce, 0x01, 0x0a, 0x1d, 0x47,
	0x65, 0x74, 0x4f, 0x77, 0x6e, 0x65, 0x64, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x42, 0x79, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x0f,
	0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x49, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x73, 0x73, 0x65, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6f, 0x77,
	0x6e, 0x65, 0x72, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x3e, 0x0a, 0x1b, 0x6f,
	0x77, 0x6e, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x69, 0x6e,
	0x67, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x19, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x4d, 0x61, 0x6e, 0x61, 0x67,
	0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x22, 0xc3, 0x02, 0x0a, 0x21,
	0x47, 0x65, 0x74, 0x50, 0x6f, 0x73, 0x73, 0x65, 0x73, 0x73, 0x65, 0x64, 0x41, 0x73, 0x73, 0x65,
	0x74, 0x73, 0x42, 0x79, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x27, 0x0a, 0x0f, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x69, 0x73, 0x73, 0x75,
	0x65, 0x72, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x73,
	0x73, 0x65, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x61, 0x73, 0x73, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x6f, 0x77, 0x6e,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x12, 0x2d, 0x0a, 0x12, 0x70, 0x6f, 0x73, 0x73, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x5f, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x70, 0x6f,
	0x73, 0x73, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12,
	0x3e, 0x0a, 0x1b, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x5f, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x19, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x4d,
	0x61, 0x6e, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x12,
	0x40, 0x0a, 0x1c, 0x70, 0x6f, 0x73, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x1a, 0x70, 0x6f, 0x73, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x32, 0x99, 0x0d, 0x0a, 0x10, 0x51, 0x75, 0x62, 0x69, 0x63, 0x4c, 0x69, 0x76, 0x65, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x75, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x42, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x12, 0x26, 0x2e, 0x71, 0x75, 0x62, 0x69, 0x63, 0x2e, 0x68, 0x74, 0x74,
	0x70, 0x2e, 0x71, 0x75, 0x62, 0x69, 0x63, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x71,
	0x75, 0x62, 0x69, 0x63, 0x2e, 0x68, 0x74, 0x74, 0x70, 0x2e, 0x71, 0x75, 0x62, 0x69, 0x63, 0x2e,
	0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x16, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x10, 0x12, 0x0e, 0x2f,
	0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x95, 0x01,
	0x0a, 0x12, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x12, 0x2e, 0x2e, 0x71, 0x75, 0x62, 0x69, 0x63, 0x2e, 0x68, 0x74, 0x74,
	0x70, 0x2e, 0x71, 0x75, 0x62, 0x69, 0x63, 0x2e, 0x70, 0x62, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x53, 0x6d, 0x61, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x71, 0x75, 0x62, 0x69, 0x63, 0x2e, 0x68, 0x74, 0x74,
	0x70, 0x2e, 0x71, 0x75, 0x62, 0x69, 0x63, 0x2e, 0x70, 0x62, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x53, 0x6d, 0x61, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x3a, 0x01, 0x2a,
	0x22, 0x13, 0x2f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x12, 0x9e, 0x01, 0x0a, 0x14, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63,
	0x61, 0x73, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x30,
	0x2e, 0x71, 0x75, 0x62, 0x69, 0x63, 0x2e, 0x68, 0x74, 0x74, 0x70, 0x2e, 0x71, 0x75, 0x62, 0x69,
	0x63, 0x2e, 0x70, 0x62, 0x2e, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x31, 0x2e, 0x71, 0x75, 0x62, 0x69, 0x63, 0x2e, 0x68, 0x74, 0x74, 0x70, 0x2e, 0x71, 0x75,
	0x62, 0x69, 0x63, 0x2e, 0x70, 0x62, 0x2e, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x3a, 0x01, 0x2a, 0x22, 0x16,
	0x2f, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x2d, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x63, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x54, 0x69, 0x63,
	0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x28, 0x2e,
	0x71, 0x75, 0x62, 0x69, 0x63, 0x2e, 0x68, 0x74, 0x74, 0x70, 0x2e, 0x71, 0x75, 0x62, 0x69, 0x63,
	0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x69, 0x63, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x12, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0c, 0x12,
	0x0a, 0x2f, 0x74, 0x69, 0x63, 0x6b, 0x2d, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x6c, 0x0a, 0x0e, 0x47,
	0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x2b, 0x2e, 0x71, 0x75, 0x62, 0x69, 0x63, 0x2e, 0x68, 0x74,
	0x74, 0x70, 0x2e, 0x71, 0x75, 0x62, 0x69, 0x63, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x15, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0f, 0x12, 0x0d, 0x2f, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x2d, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x89, 0x01, 0x0a, 0x0f, 0x47, 0x65,
	0x74, 0x49, 0x73, 0x73, 0x75, 0x65, 0x64, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x12, 0x28, 0x2e,
	0x71, 0x75, 0x62, 0x69, 0x63, 0x2e, 0x68, 0x74, 0x74, 0x70, 0x2e, 0x71, 0x75, 0x62, 0x69, 0x63,
	0x2e, 0x70, 0x62, 0x2e, 0x49, 0x73, 0x73, 0x75, 0x65, 0x64, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x71, 0x75, 0x62, 0x69, 0x63, 0x2e,
	0x68, 0x74, 0x74, 0x70, 0x2e, 0x71, 0x75, 0x62, 0x69, 0x63, 0x2e, 0x70, 0x62, 0x2e, 0x49, 0x73,
	0x73, 0x75, 0x65, 0x64, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x12, 0x19, 0x2f, 0x61, 0x73, 0x73,
	0x65, 0x74, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x7d, 0x2f, 0x69,
	0x73, 0x73, 0x75, 0x65, 0x64, 0x12, 0x85, 0x01, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x4f, 0x77, 0x6e,
	0x65, 0x64, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x12, 0x27, 0x2e, 0x71, 0x75, 0x62, 0x69, 0x63,
	0x2e, 0x68, 0x74, 0x74, 0x70, 0x2e, 0x71, 0x75, 0x62, 0x69, 0x63, 0x2e, 0x70, 0x62, 0x2e, 0x4f,
	0x77, 0x6e, 0x65, 0x64, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x28, 0x2e, 0x71, 0x75, 0x62, 0x69, 0x63, 0x2e, 0x68, 0x74, 0x74, 0x70, 0x2e, 0x71,
	0x75, 0x62, 0x69, 0x63, 0x2e, 0x70, 0x62, 0x2e, 0x4f, 0x77, 0x6e, 0x65, 0x64, 0x41, 0x73, 0x73,
	0x65, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x20, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x1a, 0x12, 0x18, 0x2f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x2f, 0x7b, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x7d, 0x2f, 0x6f, 0x77, 0x6e, 0x65, 0x64, 0x12, 0x95, 0x01,
	0x0a, 0x12, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x73, 0x73, 0x65, 0x73, 0x73, 0x65, 0x64, 0x41, 0x73,
	0x73, 0x65, 0x74, 0x73, 0x12, 0x2b, 0x2e, 0x71, 0x75, 0x62, 0x69, 0x63, 0x2e, 0x68, 0x74, 0x74,
	0x70, 0x2e, 0x71, 0x75, 0x62, 0x69, 0x63, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x6f, 0x73, 0x73, 0x65,
	0x73, 0x73, 0x65, 0x64, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2c, 0x2e, 0x71, 0x75, 0x62, 0x69, 0x63, 0x2e, 0x68, 0x74, 0x74, 0x70, 0x2e, 0x71,
	0x75, 0x62, 0x69, 0x63, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x6f, 0x73, 0x73, 0x65, 0x73, 0x73, 0x65,
	0x64, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x24, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1e, 0x12, 0x1c, 0x2f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73,
	0x2f, 0x7b, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x7d, 0x2f, 0x70, 0x6f, 0x73, 0x73,
	0x65, 0x73, 0x73, 0x65, 0x64, 0x12, 0x9f, 0x01, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x49, 0x73, 0x73,
	0x75, 0x65, 0x64, 0x41, 0x73, 0x73, 0x65, 0x74, 0x42, 0x79, 0x55, 0x6e, 0x69, 0x76, 0x65, 0x72,
	0x73, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x39, 0x2e, 0x71, 0x75, 0x62, 0x69, 0x63, 0x2e,
	0x68, 0x74, 0x74, 0x70, 0x2e, 0x71, 0x75, 0x62, 0x69, 0x63, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65,
	0x74, 0x49, 0x73, 0x73, 0x75, 0x65, 0x64, 0x41, 0x73, 0x73, 0x65, 0x74, 0x42, 0x79, 0x55, 0x6e,
	0x69, 0x76, 0x65, 0x72, 0x73, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x22, 0x2e, 0x71, 0x75, 0x62, 0x69, 0x63, 0x2e, 0x68, 0x74, 0x74, 0x70, 0x2e,
	0x71, 0x75, 0x62, 0x69, 0x63, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x73,
	0x73, 0x75, 0x61, 0x6e, 0x63, 0x65, 0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x12, 0x17,
	0x2f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x2f, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x73, 0x2f,
	0x7b, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x7d, 0x12, 0x8c, 0x01, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x49,
	0x73, 0x73, 0x75, 0x65, 0x64, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x42, 0x79, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x12, 0x33, 0x2e, 0x71, 0x75, 0x62, 0x69, 0x63, 0x2e, 0x68, 0x74, 0x74, 0x70,
	0x2e, 0x71, 0x75, 0x62, 0x69, 0x63, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x73, 0x73,
	0x75, 0x65, 0x64, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x42, 0x79, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x71, 0x75, 0x62, 0x69, 0x63,
	0x2e, 0x68, 0x74, 0x74, 0x70, 0x2e, 0x71, 0x75, 0x62, 0x69, 0x63, 0x2e, 0x70, 0x62, 0x2e, 0x41,
	0x73, 0x73, 0x65, 0x74, 0x49, 0x73, 0x73, 0x75, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x22, 0x17, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x11, 0x12, 0x0f, 0x2f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x2f, 0x69,
	0x73, 0x73, 0x75, 0x65, 0x72, 0x73, 0x12, 0x8a, 0x01, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x4f, 0x77,
	0x6e, 0x65, 0x64, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x42, 0x79, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x12, 0x32, 0x2e, 0x71, 0x75, 0x62, 0x69, 0x63, 0x2e, 0x68, 0x74, 0x74, 0x70, 0x2e, 0x71,
	0x75, 0x62, 0x69, 0x63, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x77, 0x6e, 0x65, 0x64,
	0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x42, 0x79, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x71, 0x75, 0x62, 0x69, 0x63, 0x2e, 0x68, 0x74,
	0x74, 0x70, 0x2e, 0x71, 0x75, 0x62, 0x69, 0x63, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x73, 0x73, 0x65,
	0x74, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x73, 0x22, 0x16, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x10, 0x12, 0x0e, 0x2f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x2f, 0x6f, 0x77, 0x6e,
	0x65, 0x72, 0x73, 0x12, 0x97, 0x01, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x73, 0x73, 0x65,
	0x73, 0x73, 0x65, 0x64, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x42, 0x79, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x12, 0x36, 0x2e, 0x71, 0x75, 0x62, 0x69, 0x63, 0x2e, 0x68, 0x74, 0x74, 0x70, 0x2e,
	0x71, 0x75, 0x62, 0x69, 0x63, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x73, 0x73,
	0x65, 0x73, 0x73, 0x65, 0x64, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x42, 0x79, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x71, 0x75, 0x62,
	0x69, 0x63, 0x2e, 0x68, 0x74, 0x74, 0x70, 0x2e, 0x71, 0x75, 0x62, 0x69, 0x63, 0x2e, 0x70, 0x62,
	0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x50, 0x6f, 0x73, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x22, 0x1a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x12, 0x12, 0x2f, 0x61, 0x73, 0x73, 0x65,
	0x74, 0x73, 0x2f, 0x70, 0x6f, 0x73, 0x73, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x73, 0x42, 0x28, 0x5a,
	0x26, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x71, 0x75, 0x62, 0x69,
	0x63, 0x2f, 0x71, 0x75, 0x62, 0x69, 0x63, 0x2d, 0x68, 0x74, 0x74, 0x70, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x66, 0x2f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_qubic_proto_rawDescOnce sync.Once
	file_qubic_proto_rawDescData = file_qubic_proto_rawDesc
)

func file_qubic_proto_rawDescGZIP() []byte {
	file_qubic_proto_rawDescOnce.Do(func() {
		file_qubic_proto_rawDescData = protoimpl.X.CompressGZIP(file_qubic_proto_rawDescData)
	})
	return file_qubic_proto_rawDescData
}

var file_qubic_proto_msgTypes = make([]protoimpl.MessageInfo, 36)
var file_qubic_proto_goTypes = []any{
	(*Balance)(nil),                              // 0: qubic.http.qubic.pb.Balance
	(*GetBalanceRequest)(nil),                    // 1: qubic.http.qubic.pb.GetBalanceRequest
	(*GetBalanceResponse)(nil),                   // 2: qubic.http.qubic.pb.GetBalanceResponse
	(*BroadcastTransactionRequest)(nil),          // 3: qubic.http.qubic.pb.BroadcastTransactionRequest
	(*BroadcastTransactionResponse)(nil),         // 4: qubic.http.qubic.pb.BroadcastTransactionResponse
	(*TickInfo)(nil),                             // 5: qubic.http.qubic.pb.TickInfo
	(*GetTickInfoResponse)(nil),                  // 6: qubic.http.qubic.pb.GetTickInfoResponse
	(*GetBlockHeightResponse)(nil),               // 7: qubic.http.qubic.pb.GetBlockHeightResponse
	(*AssetInfo)(nil),                            // 8: qubic.http.qubic.pb.AssetInfo
	(*IssuedAssetData)(nil),                      // 9: qubic.http.qubic.pb.IssuedAssetData
	(*IssuedAsset)(nil),                          // 10: qubic.http.qubic.pb.IssuedAsset
	(*IssuedAssetsRequest)(nil),                  // 11: qubic.http.qubic.pb.IssuedAssetsRequest
	(*IssuedAssetsResponse)(nil),                 // 12: qubic.http.qubic.pb.IssuedAssetsResponse
	(*OwnedAssetData)(nil),                       // 13: qubic.http.qubic.pb.OwnedAssetData
	(*OwnedAsset)(nil),                           // 14: qubic.http.qubic.pb.OwnedAsset
	(*OwnedAssetsRequest)(nil),                   // 15: qubic.http.qubic.pb.OwnedAssetsRequest
	(*OwnedAssetsResponse)(nil),                  // 16: qubic.http.qubic.pb.OwnedAssetsResponse
	(*PossessedAssetData)(nil),                   // 17: qubic.http.qubic.pb.PossessedAssetData
	(*PossessedAsset)(nil),                       // 18: qubic.http.qubic.pb.PossessedAsset
	(*PossessedAssetsRequest)(nil),               // 19: qubic.http.qubic.pb.PossessedAssetsRequest
	(*PossessedAssetsResponse)(nil),              // 20: qubic.http.qubic.pb.PossessedAssetsResponse
	(*QuerySmartContractRequest)(nil),            // 21: qubic.http.qubic.pb.QuerySmartContractRequest
	(*QuerySmartContractResponse)(nil),           // 22: qubic.http.qubic.pb.QuerySmartContractResponse
	(*AssetIssuanceData)(nil),                    // 23: qubic.http.qubic.pb.AssetIssuanceData
	(*AssetIssuance)(nil),                        // 24: qubic.http.qubic.pb.AssetIssuance
	(*AssetIssuances)(nil),                       // 25: qubic.http.qubic.pb.AssetIssuances
	(*AssetOwnershipData)(nil),                   // 26: qubic.http.qubic.pb.AssetOwnershipData
	(*AssetOwnership)(nil),                       // 27: qubic.http.qubic.pb.AssetOwnership
	(*AssetOwnerships)(nil),                      // 28: qubic.http.qubic.pb.AssetOwnerships
	(*AssetPossessionData)(nil),                  // 29: qubic.http.qubic.pb.AssetPossessionData
	(*AssetPossession)(nil),                      // 30: qubic.http.qubic.pb.AssetPossession
	(*AssetPossessions)(nil),                     // 31: qubic.http.qubic.pb.AssetPossessions
	(*GetIssuedAssetByUniverseIndexRequest)(nil), // 32: qubic.http.qubic.pb.GetIssuedAssetByUniverseIndexRequest
	(*GetIssuedAssetsByFilterRequest)(nil),       // 33: qubic.http.qubic.pb.GetIssuedAssetsByFilterRequest
	(*GetOwnedAssetsByFilterRequest)(nil),        // 34: qubic.http.qubic.pb.GetOwnedAssetsByFilterRequest
	(*GetPossessedAssetsByFilterRequest)(nil),    // 35: qubic.http.qubic.pb.GetPossessedAssetsByFilterRequest
	(*emptypb.Empty)(nil),                        // 36: google.protobuf.Empty
}
var file_qubic_proto_depIdxs = []int32{
	0,  // 0: qubic.http.qubic.pb.GetBalanceResponse.balance:type_name -> qubic.http.qubic.pb.Balance
	5,  // 1: qubic.http.qubic.pb.GetTickInfoResponse.tick_info:type_name -> qubic.http.qubic.pb.TickInfo
	5,  // 2: qubic.http.qubic.pb.GetBlockHeightResponse.block_height:type_name -> qubic.http.qubic.pb.TickInfo
	9,  // 3: qubic.http.qubic.pb.IssuedAsset.data:type_name -> qubic.http.qubic.pb.IssuedAssetData
	8,  // 4: qubic.http.qubic.pb.IssuedAsset.info:type_name -> qubic.http.qubic.pb.AssetInfo
	10, // 5: qubic.http.qubic.pb.IssuedAssetsResponse.issued_assets:type_name -> qubic.http.qubic.pb.IssuedAsset
	9,  // 6: qubic.http.qubic.pb.OwnedAssetData.issued_asset:type_name -> qubic.http.qubic.pb.IssuedAssetData
	13, // 7: qubic.http.qubic.pb.OwnedAsset.data:type_name -> qubic.http.qubic.pb.OwnedAssetData
	8,  // 8: qubic.http.qubic.pb.OwnedAsset.info:type_name -> qubic.http.qubic.pb.AssetInfo
	14, // 9: qubic.http.qubic.pb.OwnedAssetsResponse.owned_assets:type_name -> qubic.http.qubic.pb.OwnedAsset
	13, // 10: qubic.http.qubic.pb.PossessedAssetData.owned_asset:type_name -> qubic.http.qubic.pb.OwnedAssetData
	17, // 11: qubic.http.qubic.pb.PossessedAsset.data:type_name -> qubic.http.qubic.pb.PossessedAssetData
	8,  // 12: qubic.http.qubic.pb.PossessedAsset.info:type_name -> qubic.http.qubic.pb.AssetInfo
	18, // 13: qubic.http.qubic.pb.PossessedAssetsResponse.possessed_assets:type_name -> qubic.http.qubic.pb.PossessedAsset
	23, // 14: qubic.http.qubic.pb.AssetIssuance.data:type_name -> qubic.http.qubic.pb.AssetIssuanceData
	24, // 15: qubic.http.qubic.pb.AssetIssuances.assets:type_name -> qubic.http.qubic.pb.AssetIssuance
	26, // 16: qubic.http.qubic.pb.AssetOwnership.data:type_name -> qubic.http.qubic.pb.AssetOwnershipData
	27, // 17: qubic.http.qubic.pb.AssetOwnerships.assets:type_name -> qubic.http.qubic.pb.AssetOwnership
	29, // 18: qubic.http.qubic.pb.AssetPossession.data:type_name -> qubic.http.qubic.pb.AssetPossessionData
	30, // 19: qubic.http.qubic.pb.AssetPossessions.assets:type_name -> qubic.http.qubic.pb.AssetPossession
	1,  // 20: qubic.http.qubic.pb.QubicLiveService.GetBalance:input_type -> qubic.http.qubic.pb.GetBalanceRequest
	21, // 21: qubic.http.qubic.pb.QubicLiveService.QuerySmartContract:input_type -> qubic.http.qubic.pb.QuerySmartContractRequest
	3,  // 22: qubic.http.qubic.pb.QubicLiveService.BroadcastTransaction:input_type -> qubic.http.qubic.pb.BroadcastTransactionRequest
	36, // 23: qubic.http.qubic.pb.QubicLiveService.GetTickInfo:input_type -> google.protobuf.Empty
	36, // 24: qubic.http.qubic.pb.QubicLiveService.GetBlockHeight:input_type -> google.protobuf.Empty
	11, // 25: qubic.http.qubic.pb.QubicLiveService.GetIssuedAssets:input_type -> qubic.http.qubic.pb.IssuedAssetsRequest
	15, // 26: qubic.http.qubic.pb.QubicLiveService.GetOwnedAssets:input_type -> qubic.http.qubic.pb.OwnedAssetsRequest
	19, // 27: qubic.http.qubic.pb.QubicLiveService.GetPossessedAssets:input_type -> qubic.http.qubic.pb.PossessedAssetsRequest
	32, // 28: qubic.http.qubic.pb.QubicLiveService.GetIssuedAssetByUniverseIndex:input_type -> qubic.http.qubic.pb.GetIssuedAssetByUniverseIndexRequest
	33, // 29: qubic.http.qubic.pb.QubicLiveService.GetIssuedAssetsByFilter:input_type -> qubic.http.qubic.pb.GetIssuedAssetsByFilterRequest
	34, // 30: qubic.http.qubic.pb.QubicLiveService.GetOwnedAssetsByFilter:input_type -> qubic.http.qubic.pb.GetOwnedAssetsByFilterRequest
	35, // 31: qubic.http.qubic.pb.QubicLiveService.GetPossessedAssetsByFilter:input_type -> qubic.http.qubic.pb.GetPossessedAssetsByFilterRequest
	2,  // 32: qubic.http.qubic.pb.QubicLiveService.GetBalance:output_type -> qubic.http.qubic.pb.GetBalanceResponse
	22, // 33: qubic.http.qubic.pb.QubicLiveService.QuerySmartContract:output_type -> qubic.http.qubic.pb.QuerySmartContractResponse
	4,  // 34: qubic.http.qubic.pb.QubicLiveService.BroadcastTransaction:output_type -> qubic.http.qubic.pb.BroadcastTransactionResponse
	6,  // 35: qubic.http.qubic.pb.QubicLiveService.GetTickInfo:output_type -> qubic.http.qubic.pb.GetTickInfoResponse
	7,  // 36: qubic.http.qubic.pb.QubicLiveService.GetBlockHeight:output_type -> qubic.http.qubic.pb.GetBlockHeightResponse
	12, // 37: qubic.http.qubic.pb.QubicLiveService.GetIssuedAssets:output_type -> qubic.http.qubic.pb.IssuedAssetsResponse
	16, // 38: qubic.http.qubic.pb.QubicLiveService.GetOwnedAssets:output_type -> qubic.http.qubic.pb.OwnedAssetsResponse
	20, // 39: qubic.http.qubic.pb.QubicLiveService.GetPossessedAssets:output_type -> qubic.http.qubic.pb.PossessedAssetsResponse
	24, // 40: qubic.http.qubic.pb.QubicLiveService.GetIssuedAssetByUniverseIndex:output_type -> qubic.http.qubic.pb.AssetIssuance
	25, // 41: qubic.http.qubic.pb.QubicLiveService.GetIssuedAssetsByFilter:output_type -> qubic.http.qubic.pb.AssetIssuances
	28, // 42: qubic.http.qubic.pb.QubicLiveService.GetOwnedAssetsByFilter:output_type -> qubic.http.qubic.pb.AssetOwnerships
	31, // 43: qubic.http.qubic.pb.QubicLiveService.GetPossessedAssetsByFilter:output_type -> qubic.http.qubic.pb.AssetPossessions
	32, // [32:44] is the sub-list for method output_type
	20, // [20:32] is the sub-list for method input_type
	20, // [20:20] is the sub-list for extension type_name
	20, // [20:20] is the sub-list for extension extendee
	0,  // [0:20] is the sub-list for field type_name
}

func init() { file_qubic_proto_init() }
func file_qubic_proto_init() {
	if File_qubic_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_qubic_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*Balance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qubic_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*GetBalanceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qubic_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*GetBalanceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qubic_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*BroadcastTransactionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qubic_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*BroadcastTransactionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qubic_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*TickInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qubic_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*GetTickInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qubic_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*GetBlockHeightResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qubic_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*AssetInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qubic_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*IssuedAssetData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qubic_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*IssuedAsset); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qubic_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*IssuedAssetsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qubic_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*IssuedAssetsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qubic_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*OwnedAssetData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qubic_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*OwnedAsset); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qubic_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*OwnedAssetsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qubic_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*OwnedAssetsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qubic_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*PossessedAssetData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qubic_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*PossessedAsset); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qubic_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*PossessedAssetsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qubic_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*PossessedAssetsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qubic_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*QuerySmartContractRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qubic_proto_msgTypes[22].Exporter = func(v any, i int) any {
			switch v := v.(*QuerySmartContractResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qubic_proto_msgTypes[23].Exporter = func(v any, i int) any {
			switch v := v.(*AssetIssuanceData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qubic_proto_msgTypes[24].Exporter = func(v any, i int) any {
			switch v := v.(*AssetIssuance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qubic_proto_msgTypes[25].Exporter = func(v any, i int) any {
			switch v := v.(*AssetIssuances); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qubic_proto_msgTypes[26].Exporter = func(v any, i int) any {
			switch v := v.(*AssetOwnershipData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qubic_proto_msgTypes[27].Exporter = func(v any, i int) any {
			switch v := v.(*AssetOwnership); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qubic_proto_msgTypes[28].Exporter = func(v any, i int) any {
			switch v := v.(*AssetOwnerships); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qubic_proto_msgTypes[29].Exporter = func(v any, i int) any {
			switch v := v.(*AssetPossessionData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qubic_proto_msgTypes[30].Exporter = func(v any, i int) any {
			switch v := v.(*AssetPossession); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qubic_proto_msgTypes[31].Exporter = func(v any, i int) any {
			switch v := v.(*AssetPossessions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qubic_proto_msgTypes[32].Exporter = func(v any, i int) any {
			switch v := v.(*GetIssuedAssetByUniverseIndexRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qubic_proto_msgTypes[33].Exporter = func(v any, i int) any {
			switch v := v.(*GetIssuedAssetsByFilterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qubic_proto_msgTypes[34].Exporter = func(v any, i int) any {
			switch v := v.(*GetOwnedAssetsByFilterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qubic_proto_msgTypes[35].Exporter = func(v any, i int) any {
			switch v := v.(*GetPossessedAssetsByFilterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_qubic_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   36,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_qubic_proto_goTypes,
		DependencyIndexes: file_qubic_proto_depIdxs,
		MessageInfos:      file_qubic_proto_msgTypes,
	}.Build()
	File_qubic_proto = out.File
	file_qubic_proto_rawDesc = nil
	file_qubic_proto_goTypes = nil
	file_qubic_proto_depIdxs = nil
}
